


var arry=[6,4,5,3,8,7,1,9,2];
for(var i=0;i<arry.length;i++)
{
  var min=i;
  for(var j=i+1;j<arry.length;j++){
	  if(arry[j]<arry[min]){
	  		min=j;
  	}
  }
  //最小数arry[min]
  
  
 // var minNumber=arry[min];
 // arry[min]=arry[i];
 // arry[i]=minNumber;
				 var temp = arry[i];
             //把最小数索引对应的值放到最左边
             arry[i] = arry[min];
             //把原来最左边对应的值放到最小数索引所在的位置
             arry[min] = temp;

  
}
alert(arry);

方法二
var arry=[6,4,5,3,8,7,1,9,2];

    var i, j, k,n=arry.length;
    
    for (i = 1; i < n; i++)  
    {  
       //为a[i]在前面的a[0...i-1]有序区间中找一个合适的位置  
       for (j = i - 1; j >= 0; j--)  
            if (arry[j] < arry[i])  
                break;  
  
       //如找到了一个合适的位置  
       if (j != i - 1)  
        {  
           //将比a[i]大的数据向后移  
           var temp = arry[i];  
           for (k = i - 1; k > j; k--)  
              arry[k + 1] = arry[k];  
            //将a[i]放到正确位置上  
           arry[k + 1] = temp;  
      }  
    }  
alert(arry);

//第三种 先将最小的数据保存起来，后面的如果有一个比他大的则插入，后面的相应调整
//即每次a[i]先和前面一个数据a[i-1]比较，
//如果a[i] > a[i-1]说明a[0…i]也是有序的，无须调整。
//否则就令j=i-1,temp=a[i]。然后一边将数据a[j]向后移动一边向前搜索，
//当有数据a[j]<a[i]时停止并将temp放到a[j + 1]处。arry[j] < temp
var arry=[6,4,5,3,8,7,1,9,2];

    var i, j;  
   for (i = 1; i < arry.length; i++)  
       if (arry[i] < arry[i - 1])  
        {  
            var temp = arry[i];  
            for (j = i - 1; j >= 0 && arry[j] > temp; j--)  
              arry[j + 1] = arry[j];  
           arry[j + 1] = temp;  
       }

alert(arry);
